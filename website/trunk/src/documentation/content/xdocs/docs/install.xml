<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>Installation Guide</title> 
  </header> 
  <body> 
    <section id="Overview">
      <title>Overview</title>
      <p>
		This page is supposed to help you jump-start the Open IMS Core. In the SVN distribution, the whole things is pre-configured
		and pre-provisioned with a set of minimal data that should be enough for a simple Alice-calls-Bob trial.
	  </p>	  
    </section>
    <section id="installscript">
      <title>Quick Install</title>
      <p>
      	If you already went once through the installation procedure, this section will help refresh your memory on what steps are
      	you supposed to follow. If this is your first time, skip over for now and start with Step 1.
      </p>
      <source>
      	<![CDATA[
      	mkdir /opt/OpenIMSCore 
      	cd /opt/OpenIMSCore

      	mkdir FHoSS 
      	svn checkout http://svn.berlios.de/svnroot/repos/openimscore/FHoSS/trunk FHoSS

      	mkdir ser_ims 
      	svn checkout http://svn.berlios.de/svnroot/repos/openimscore/ser_ims/trunk ser_ims

      	cd FHoSS 
      	ant gen compile deploy 
      	cd ..

      	cd ser_ims 
      	make all 
      	cd ..


      	mysql -u root -p < FHoSS/scripts/hssdb.sql 
      	mysql -u root -p < FHoSS/scripts/userdata.sql

      	mysql -u root -p < ser_ims/cfg/icscf.sql 

      	cp ser_ims/cfg/*.cfg . 
      	cp ser_ims/cfg/*.xml . 
      	cp ser_ims/cfg/*.sh .
      	]]>
      </source>
    </section>
    
    <section id="step1">
      <title>Step 1: Prerequisites</title>
      <ul>
      	<li>Hardware requirements
      		<ul>
      			<li>A current Linux desktop class machine should be enough</li>
      			<li>If you want to get ultimate performance:
      				<ul>
      					<li>Add several Gigabytes of RAM</li>
      					<li>Have as many CPUs/Cores as</li>
      					<li>Gigabit Ethernet would help</li>
      				</ul>
      			</li>
      		</ul>      		
      	</li>
      	<li>Network access
      		<ul>
      			<li>A current Linux desktop class machine should be enough</li>
      			<li>Inter-domain NAT is not something we are interested in, so a public IP address would be great</li>
      			<li>Controllable DNS server if you don't want to have one on your Linux box</li>
      		</ul>      		
      	</li>
      	<li>Software requirements
      		<ul>
      			<li>~100 MBytes of disk space to be on the safe side</li>
				<li>GCC3/4, JDK1.5, ant</li>
				<li>MySQL installed and started (or other DBMS if you can deal with it)</li>
				<li>libxml2, libmysql - both with development</li>
				<li>Linux kernel 2.6 and ipsec-tools (setkey) if you want to use IPSec SAs</li>
				<li>bind installed and running (or other name server if you can deal with it)</li>
				<li>Browser on the box or that can connect to the box (for user provisioning)</li>
				<li>Note: we consider that you have all this installed, configured and running.</li>
				<li>Note: we assume for now that you want to install the whole thing on just 1 box. </li>
      		</ul>      		
      	</li>
      </ul>
	</section>   
    <section id="step2">
      <title>Step 2: Get the Source Code</title>
      <ul>
      	<li>Where? - Fresh code at <a href="http://svn.berlios.de/svnroot/repos/openimscore">http://svn.berlios.de/svnroot/repos/openimscore</a>
      	 (you will need to have Subversion installed).
      		On <a href="../sources/index.html">this page</a> you can find a lot more information about the sources.</li>
      	<li>What? 
      		<ul>
      			<li>The CSCFs: ser_ims/trunk</li>
      			<li>The HSS: FHoSS/trunk</li>
      		</ul>
      	</li>
      	<li>How? - The source code is pre-configured to work from a standard file path:
      		<ul>
      			<li>Create /opt/OpenIMSCore and go there
      				<source>mkdir /opt/OpenIMSCore
cd /opt/OpenIMSCore</source>
      				</li>
      			<li>Create a new directory ser_ims and checkout the CSCFs there:
      				<source>mkdir ser_ims
svn checkout http://svn.berlios.de/svnroot/repos/openimscore/ser_ims/trunk ser_ims</source>
				</li>
      			<li>Create a new directory FHoSS and checkout the HSS there:
      				<source>mkdir FHoSS
svn checkout http://svn.berlios.de/svnroot/repos/openimscore/FHoSS/trunk FHoSS</source>
				</li>
				<li>If you would prefer another path, be prepared to edit the configuration files!</li>
			</ul>
		</li>      	
      </ul>
	</section>    
    <section id="step3">
      <title>Step 3: Compile</title>
      <ul>
      	<li>ser_ims
      		<ul>
      			<li><strong> New!!! </strong> Do "make install-libs all" in ser_ims
      				<source>cd ser_ims
make install-libs all
cd ..</source>
				</li>
      			<li>If something breaks, you probably don't have all the prerequisites.</li>
      		</ul>
      	</li>
      	<li>FHoSS
      		<ul>
			<li>If you don't have a JDK >=1.5, get one before proceeding</li>
      			<li>Make sure, that the JDK version that you are using is >= 1.5!!! 
			<source># java -version
java version "1.5.0_07"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_07-b03)
Java HotSpot(TM) Client VM (build 1.5.0_07-b03, mixed mode)
			</source>
			It is often the case that users have just installed a 1.5 JDK but they are
			    still using their old JDK installation! If you see lots of errors, recheck
			    this before posting a bug report!</li>
      			<li>Do "ant gen compile deploy" in FHoSS
      				<source>cd FHoSS
ant gen
ant compile
ant deploy
cd..</source>
				</li>
      		</ul>
      	</li>
		<li>While you wait for the compilation to finish, you can go ahead and perform Step 4.</li>
	  </ul>
	</section>
    <section id="step4">
      <title>Step 4: Configure the Environment</title>
      <ul>
      	<li>Notes:
      		<ul>
      			<li>All the installation examples configured to work only on the local loopback 
      			and the default domain configured as "open-ims.test". </li>
				<li>The MySQL access rights are set only for local access</li>
				<li>We recommend that you try it first like this and then do your changes:
					<ul>
						<li>Replace 127.0.0.1 where required with your IP address</li>
						<li>Replace the home domain (open-ims.test) with your own one</li>
						<li>Change the database passwords</li>
					</ul>
					For this operation the ser_ims/cfg/configurator.sh might help you.
				</li>
			</ul>
		</li>
		<li>DNS
			<ul>
				<li>A sample DNS zone file can be found in ser_ims/cfg/open-ims.dnszone</li>
				<li>Copy it to your bind configuration directory</li>
				<li>Edit named.conf and insert the file there (Would be great to also add reverse DNS entries)</li>
				<li>Restart the name server</li>
				<li>Test that the names are resolvable (don't forget about /etc/resolv.conf pointing to your new DNS server!)</li>
			</ul>
		</li>
		<li>MySQL
			<ul>
				<li>Run the SQL dumps (mysql -u root -p -h localhost &lt; dump.sql):
					<source>mysql -u root -p -h localhost &lt; ser_ims/cfg/icscf.sql

mysql -u root -p -h localhost &lt; FHoSS/scripts/hssdb.sql
mysql -u root -p -h localhost &lt; FHoSS/scripts/userdata.sql
</source>
				</li>				
				<li>Check if the databases are in there and accessible</li>
			</ul>
		</li>
      </ul>
    </section>
    <section id="step5">
      <title>Step 5: Configure the IMS Core</title>
      <ul>
      	<li>By now you should have MySQL and DNS working</li>
		<li>CSCFs
			<ul>
				<li>Copy the following files to /opt/OpenIMSCore or another location comfortable for you:
pcscf.cfg, pcscf.sh, icscf.cfg, icscf.xml, icscf.sh, scscf.cfg, scscf.xml, scscf.sh, 
					<source>
cp ser_ims/cfg/*.cfg . 
cp ser_ims/cfg/*.xml . 
cp ser_ims/cfg/*.sh .				
					</source>
				</li>
			</ul>
		</li>
		<li>FHoSS
			<ul>
<!--			<li>Copy the following files to /opt/OpenIMSCore or another location comfortable for you: FHoSS.sh	-->
				<li>Take a look at the configuration files in FHoSS/deploy/ (available after Step 3 completes)</li>
			</ul>
		</li>
		<li>Edit these files to your own preferences (don't forget to update the DNS zone file accordingly and restart the name server)</li>
      </ul>
    </section>
    <section id="step6">
      <title>Step 6: Start the components</title>
      <ul>
      	<li>CSCFs
      		<ul>
      			<li>Start pcscf.sh, icscf.sh and scscf.sh</li>
      			<li>All these should run in parallel.</li>
      			<li>We love debugging, so by default they would stay in foreground.</li>
      			<li>By default you should see periodically log messages with the content of the registrar and with the opened diameter links</li>
      		</ul>
      	</li>
      	<li>FHoSS
      		<ul>
      			<li>Start FHoSS/deploy/startup.sh</li>
      			<li>Check the web interface on <a href="http://localhost:8080/">http://localhost:8080/</a></li>
      			<li>Check if the Diameter Peers are connecting to each other. You can see this in the console of FHoSS or in that of I/S-CSCF</li>
      		</ul>
      	</li>
      </ul>
    </section>
    <section id="step7">
      <title>Step 7: Configure Subscribers</title>
      <ul>
      	<li>FHoSS
      		<ul>
      			<li>By default, FHoSS comes provisioned with a couple of sample users:
      				<ul>
      					<li>alice@open-ims.test</li>
      					<li>bob@open-ims.test</li>
      				</ul>
      			</li>
      			<li>Use these or insert new ones.
      				<ul>
      					<li>Create a Subscription</li>
      					<li>Create a Private Identity</li>
      					<li>Create a Public Identity</li>
      					<li>Link them</li>
      				</ul>
      			</li>
			</ul>
		</li>
      	<li>SIP-to-IMS Gateway
      		<ul>
      			<li>The SIP-to-IMS Gateway is now obsolete and was droped from the project. See the Annex and FAQ for information
      			on how you can use the Open IMS Core with SIP clients capable of only MD5 authentication.
      			</li>
			</ul>
		</li>
		<li>IMS User Endpoint Configuration
			<ul>
				<li>Provision with your own UE data or use one of the default users</li>
				<li>Alice:
					<ul>
						<li>Private Identity: alice@open-ims.test</li>
						<li>Secret Key: alice</li>
						<li>OP: 0x00...0</li>
						<li>AMF: 0x00...0</li>
						<li>Use of Anonimity Key: enable</li>
						<li>Public Identity: sip:alice@open-ims.test</li>
						<li>Realm: open-ims.test</li>
						<li>Strict Outbound Proxy: sip:pcscf.open-ims.test:4060</li>
					</ul>
				</li>
				<li>Bob: similar</li>
			</ul>
		</li>
		<li>SIP User Endpoint Configuration
			<ul>
				<li>Alice:
						<ul>
						<li>User part of the SIP URI: alice</li>
						<li>Host part of the SIP URI/Domain/realm: open-ims.test</li>
						<li>Password: alice</li>
						<li>Strict Outbound Proxy: sip:pcscf.open-ims.test:4060</li>
						<li>!!! Make sure that your SIP client does REGISTER sip:open-ims.test and not REGISTER sip:pcscf.open-ims.test:4060</li>
						<li>!!! Read the Annex and FAQ related to using MD5-only clients with the Open IMS Core</li>
					</ul>
				</li>
				<li>Bob: similar</li>
			</ul>
		</li>
      </ul>
    </section>
    <section id="step8">
      <title>Step 8: Test!</title>
      <ul>
      	<li>This is the last step. You should have all installed and configured by now</li>
		<li>Registration uses all components and as such, it is a good test if all is up &amp; running</li>
		<li>Use Wireshark to see what's going on:
			<ul>
				<li>Monitor ports 4060, 5060 and 6060 for SIP traffic</li>
				<li>Monitor ports 3868, 3869 and 3870 for Diameter traffic</li>
			</ul>
		</li>
	  </ul>
	</section>
    <section id="annexa">
      <title>Annex A - DNS HOWTO</title>
      <p>
		A lot of users seem to have difficulties when setting up a DNS server. Although it is not our
		purpose to teach you this, here is a summary of this process. But be aware that this does not means that we
		are offering any further support for it and you don't have to read the DNS manual. If you think that 
		/etc/hosts would be enough, you are wrong as it can not help you with special DNS queries like NAPTR and SRV.		
	  </p>
	  <p><strong>So how do you get a DNS server up and running?</strong>
	  </p>
		  <ul>
		  	<li>Get the bind (or often called named) package installed on your distribution</li>
		  	<li>Make sure you are root</li>
		  	<li>Locate named.conf (could be in /etc or /etc/bind or /etc/named)</li>
		  	<li>Edit that file according to your needs. Here are some things that you need in there:
		  		<source>options {
	...
	forward first;
	forwarders {
	    {THE_IP_ADDRESS_OF_YOUR_UPSTREAM_DNS_SERVER;}  ;
	};
	...
};
...

zone "open-ims.test" IN {
	type master;
	file "pri/open-ims.dnszone";
	notify no;
};
...</source>
				On some distributions this file includes other files so be sure to dig through those also.
				THE_IP_ADDRESS_OF_YOUR_UPSTREAM_DNS_SERVER can be found in /etc/resolv.conf. 
			</li>
			<li>Now copy the file /opt/OpenIMSCore/ser_ims/cfg/open-ims.dnszone to where you configure it above 
			(pri/open-ims.dnszone)
			<source>cp /opt/OpenIMSCore/ser_ims/cfg/open-ims.dnszone /var/bind/pri/
chown -R named:named /var/bind/pri/open-ims.dnszone</source>
			</li>
			<li>Then start or re-start the DNS server (remember that these configuration files are not monitored 
			for changes so you will have to send a SIGHUP or do a restart to reload them).
				<source>/etc/init.d/named restart</source>
			</li>
			<li>You should now test if it works. In the response look if you got the correct answer.
				<source>dig @127.0.0.1 pcscf.open-ims.test</source>
			</li>
			<li>To actually use it, you would need to configure it as a DNS server for your machine. Here is
			how your /etc/resolv.conf file should look like:
			<source># cat /etc/resolv.conf
nameserver 127.0.0.1
search open-ims.test
domain open-ims.test</source>
			</li>
			<li>Remember that utilities like the DHCP-Client overwrite this file be default!</li>
		</ul>
    </section>
    <section id="annexb">
      <title>Annex B - SIP Clients How-To</title>
      <p>
		The old SIP2IMS module that was performing MD5-to-AKA authentication translation has been deleted as being
		obsolete as the core can perform MD5 authentication too. Another reason is that it's functionality was seriously 
		flawed by the fact that it was a SIP proxy rather than a full B2BUA.
	  </p>
	  <p><strong>So how do you get a client registered?</strong></p>
		  <ul>
		  	<li>First provision the users (or use the default sip:alice@open-ims.test or sip:bob@open-ims.test).
		  	Make sure than in the HSS provisioning interface in the private identity configuration, you allow the
		  	use of Digest-MD5 for the respective users
		  	</li>		  	
		  	<li>Then you have two options for the S-CSCF to trigger an MD5 authentication
		  		<ol>
			  		<li>Modify the client to send a parameter "algorithm=MD5" in the Authorization header in the first
			  		unauthorized REGISTER.</li>
			  		<li>Or modify the scscf.cfg and enable the MD5 authorization as the default authentication method instead
			  		of AKAv1-MD5.</li>
		  		</ol>
		  	</li>
		  	<li>Next just make sure that the client is using the P-CSCF address (sip:pcscf.open-ims.test:4060 by default) as
		  	strict outbound proxy and the REGISTER Request-URI is "sip:open-ims.test" (or your own domain name) and not
		  	"sip:pcscf.open-ims.test:4060" as many SIP clients fail here.</li>
		</ul>
    </section>


    <section id="annexc">
      <title>Annex C - Changing the Domain Name and IP-Address of configuration files</title>
      <p>

		OpenIMSCore is preconfigured to work with the domain "open-ims.test" and ip address of default loopback device, "127.0.0.1".
		Following the installation instructions above without changing the configuration files would set up this environment
		successfully. For some reasons(like testing roaming,communicating with other external entitites), you would need
		to change the domain name. In that case you could use a configuration script(configurator.sh)  which is stored under 
		directory /opt/OpenIMSCore/ser_ims/cfg/
		
	  </p>
	  <p><strong>Does it only change *.cfg files?</strong></p>

	  <p>
		No, it can also reconfigure *.xml , *.sql and FHoSS configuration files(*.properties).

	  </p>
		
	  <p><strong>How do I make use of configurator.sh?</strong></p>
		  <ul>
		  	<li> You can directly execute it and fetch the files to be changed as arguments. See the example
			below:
			
			<source>    # pwd    
				    # /opt/OpenIMSCore

				    # ser_ims/cfg/configurator.sh ser_ims/cfg/scscf.cfg ser_ims/cfg/icscf.xml \ 
					    FHoSS/deploy/hssdb.sql FHoSS/deploy/hss.properties
			</source>		    
			</li>
		  	
			<li> Then copy the files to the /opt/OpenIMSCore directory </li>
			<li> Note that you have to backup your configuration files that you want to reconfigure </li>
			
		</ul>
    </section>
  </body>
</document>
